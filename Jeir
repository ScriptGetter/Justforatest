-- Load the GUI library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()

-- Create a new window for the GUI
local Window = Library:NewWindow("RNG BATTLE")

-- Create a new section in the window
local Tab = Window:NewSection("Main")

-- Declare necessary variables
local player = game.Players.LocalPlayer
local teleportToPlayer = nil
local teleportEnabled = false  -- Control variable for the teleportation toggle
local teleportConnection = nil  -- To hold the connection to stop teleporting when disabled

-- Function to send notification
local function sendNotification(title, text)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = Subscribe;
        Text = Thank You For Using This Script!;
        Icon = "https://i.imgur.com/Xy4bVjr.png";  -- Optional: You can add a URL to an icon if you want.
        Duration = 3;  -- Duration in seconds
    })
end

-- Function to teleport and "stick" to the head of the target player
local function teleportToHead(targetPlayer)
    local head = targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head")
    if head then
        -- Move player to the head position and anchor them to "stick" there
        player.Character:SetPrimaryPartCFrame(head.CFrame)

        -- Make the player's character "stick" to the target's head by anchoring it
        local humanoidRootPart = player.Character:WaitForChild("HumanoidRootPart")
        humanoidRootPart.Anchored = true
    end
end

-- Function to unanchor the player and stop sticking to the head
local function unanchorPlayer()
    local humanoidRootPart = player.Character:WaitForChild("HumanoidRootPart")
    humanoidRootPart.Anchored = false
end

-- Function to find another alive player
local function findAlivePlayer()
    local alivePlayers = {}
    for _, p in pairs(game.Players:GetPlayers()) do
        if p ~= player and p.Character and p.Character:FindFirstChild("Humanoid") and p.Character.Humanoid.Health > 0 then
            table.insert(alivePlayers, p)
        end
    end

    -- Return a random alive player from the list
    if #alivePlayers > 0 then
        return alivePlayers[math.random(1, #alivePlayers)]
    else
        return nil
    end
end

-- Main function to monitor the player when teleportation is enabled
local function monitorPlayer()
    while teleportEnabled do
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            if player.Character.Humanoid.Health > 0 then
                if not teleportToPlayer or not teleportToPlayer.Character or teleportToPlayer.Character.Humanoid.Health <= 0 then
                    -- Choose a new player to teleport to if the current target is dead or invalid
                    teleportToPlayer = findAlivePlayer()
                    if teleportToPlayer then
                        teleportToHead(teleportToPlayer)
                    end
                end
            end
        end
        wait(0.5)  -- Update rate to check every 0.5 seconds
    end
end

-- Create the toggle button in the GUI
Tab:CreateToggle("Teleport Head (Kill)", function(value)
    teleportEnabled = value  -- Set teleportation status based on the toggle

    -- Print the value to the output for debugging
    print("Teleportation Enabled: " .. tostring(value))

    if teleportEnabled then
        -- Start the teleportation monitoring when enabled
        print("Teleportation is now enabled!")
        
        -- Send notification when teleportation is enabled
        sendNotification("Teleportation Enabled", "You are now stuck to a player's head!")

        -- Use a new thread to monitor the player
        spawn(function()  -- Spawn a new thread to run the monitorPlayer function
            monitorPlayer()  -- Start monitoring and teleporting to player's head
        end)
    else
        -- Stop teleportation if disabled and unanchor the player
        print("Teleportation is now disabled!")
        
        -- Send notification when teleportation is disabled
        sendNotification("Teleportation Disabled", "You are no longer stuck to a player's head.")

        unanchorPlayer()  -- Unanchor the player and stop sticking to the head
    end
end)
